
public class UserPrincipal extends AbstractPrincipal {

	private final String{this <- } username;
	private final String{this <- ; this -> } password;

	public UserPrincipal(String{this} name, Principal{this} superior, String{this} username, String{this} password) {
		this.username = username;
		this.password = password;
		super(name, superior);
	}

	public String{t3p <- } getUsername{t3p <- }(Principal t3p)
		where caller(t3p), t3p actsfor this
	{
		String usernameA = endorse(username, {this <- } to {t3p <- });
		return usernameA;
	}

	public String{t3p <- ; t3p -> } getPassword{t3p <- }(Principal t3p)
		where caller(t3p), t3p actsfor this
	{
		String passwordA = declassify(password, {this <- ; this -> } to {this <- ; t3p -> });
		String passwordB = endorse(passwordA, {this <- ; t3p -> } to {t3p -> ; t3p <- });
		return passwordB;
	}

}

