
public class UserPrincipal extends AbstractPrincipal {

	private final String{this <- } username;
	private final String{this <- ; this -> } password;

	public UserPrincipal(String{this} name, Principal{this} superior, String{this} username, String{this} password) {
		this.username = username;
		this.password = password;
		super(name, superior);
	}

	public String{this <- } getUsername(Principal t3p) {
		return username;
	}

/*
	public String{t3p <- } getUsername{t3p <- }(Principal t3p)
		where t3p actsfor this, caller(t3p)
	{
		return endorse(username, {this <- } to {t3p <- });
	}

	public String{t3p <- ; t3p -> } getPassword{t3p <- }(Principal t3p)
		where t3p actsfor this, caller(t3p)
	{
		return endorse(password, {this -> ; this <- } to {this -> ; t3p <- });
	}
*/
}

