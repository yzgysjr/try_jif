
public class User extends AbstractPrincipal {
	final RunExample{this -> _ ; this <- } env;

	public User(String{this} name, Principal{this} superior, RunExample{this} env) {
		this.env = env;
		super(name, superior);
	}

	public boolean{this -> shop; this <- } redeem{this <- ; this -> shop}(Transaction tx, Shop{this <- ; this ->} shop, Coupon{this <- ; this ->} _c)
		where authority(this)
	{
		if (env == null)
			return false;
		if (declassify(shop, {this -> shop; this <-}) == null)
			return false;
		Coupon c = declassify(_c, {this -> shop; this <-});

		boolean{this -> shop; this <- } validationResult = declassify(endorse(true, {this -> ; this <- }), {this -> shop; this <- });
		if (validationResult) {
			boolean{this ->  } result = shop.redeem_tx_ok(this, tx, c);
			return endorse(declassify(result, {this -> shop}), {this -> shop; this <- });
		}
		else {
			return false;
		}
	}

}


