
public class Shop extends AbstractPrincipal {
	final RunExample{this} env;

	public Shop(String{this} name, Principal{this} superior, RunExample{this} env) {
		this.env = env;
		super(name, superior);
	}

	public TimeStamp{this -> user; this <- } transaction_ok(User{this -> user; this <- } user, Transaction{this -> user; this <- } tx)
		where authority(this) {
		return new TimeStamp(0);
	}

	public void purchase{this <- }(User{this -> user; this <- } user, Transaction{this -> user; this <- } tx) where authority(this) {
		TimeStamp t = transaction_ok(user, tx);
		if (env != null)
			env.add(t, user, tx, this);
	}

	public boolean{user ->  } redeem_tx_ok(User user, Transaction tx, Coupon c) {
		return true;
	}

}

